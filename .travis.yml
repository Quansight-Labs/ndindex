language: python

dist: xenial

matrix:
  include:
    - python: 3.7
      env:
        - TESTS=true
    - python: 3.8
      env:
        - TESTS=true
        - DOCS=true
        - CODECOV=true
        # Doctr deploy key for Quansight/ndindex
        - secure: "e0sPsQ2FgguRv8qzByrRRFCHIOxI9ixUgsl1LeUdRw9M0yX8O6O9/CFeQBL+/l5FNu7ECM71I+a++pl/mkKkWexZwnR9zhYYRaPPBAjlyCmmEHemdIA9rlEd3hm5E8Z8+4CxoPFH3WaiIFBZwcTQtzlBen0EZpP6UjsaI+/XFdUb9Nw/uMlacXOxVetBFKoCTk218GXvjRRf5mPoHu3or5Rf7vAOOoPWYNuZEptWx/JJ1/p6EO05LqJPJVW6gRS7XZykCQytaXTD2dvvtAl21z6ppaQ0OfH5ku5DUY8NHgKuRcKRb56H0/pq6jIR/ALFkoPPy/43ildW66jDxVET0k9Ucm1bmHJPtGvH8r2ECAhY2PLvjDxAbOpuqejczaYPC75Nin7rileu738RTOxwmW/6NSPr2TmqUuhgzkyvi7cU4iizLmjEQQrYizNPDjwP0LMhxc6kE9ArWcaZIvZMUOddLwVaP8akoKkLuRlL+sMjWqb5Cm/ofcohAdBdBiakg50kIHldw65m+aqsz+JBlMQAejSm0keiiJaa494Sq1DiJrnjeylra4lru7pWK61/WfqMy4kDe1Y3LRaEx7KCNDllknFTcC/+R90x0WqeVXV6FEKVfPKgU2/rx4Hr2N89Svwgta2lZOicfsiLVrvdDN6eQ4N+eIRgN63zSbK8BcI="
    - name: python 3.9
      env:
        - PYTHON_VERSION=3.9
        - TESTS=true

install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels conda-forge
  - conda update -q conda
  - conda info -a
  - conda create -n test-environment python=${PYTHON_VERSION:-$TRAVIS_PYTHON_VERSION} pyflakes pytest pytest-doctestplus sympy hypothesis doctr sphinx myst-parser sphinx_rtd_theme pytest-cov pytest-flakes
  - source activate test-environment
  - pip install --pre numpy>=1.20

script:
  - set -e
  - python -We:invalid -We::SyntaxWarning -m compileall -f -q ndindex/
  # The coverage requirement check is done by the coverage report line below
  - PYTEST_FLAGS="$PYTEST_FLAGS -v --cov-fail-under=0";
  - pytest $PYTEST_FLAGS
  - ./run_doctests
  # Make sure it installs
  - python setup.py install
  - if [[ "${DOCS}" == "true" ]]; then
        cd docs;
        make html;
        cd ..;
        if [[ "${TRAVIS_BRANCH}" == "master" ]]; then
            doctr deploy .;
        else
            doctr deploy --no-require-master "_docs-$TRAVIS_BRANCH";
        fi
    fi
  - if [[ "${COVERAGE}" == "true" ]]; then
        bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports";
    fi
  # Here in case codecov fails. This also sets the failing status if the
  # coverage is not 100%. Travis sometimes cuts off the last command, which is
  # why we print stuff at the end.
  - if ! coverage report -m; then
        echo "Coverage failed";
        false;
    else
        echo "Coverage passed";
    fi;
