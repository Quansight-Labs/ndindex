language: python

dist: xenial

matrix:
  include:
    - python: 3.6
      env:
        - TESTS=true
    - python: 3.7
      env:
        - TESTS=true
    - python: 3.8
      env:
        - TESTS=true
        - DOCS=true
        - COVERAGE=true
        # Doctr deploy key for Quansight/ndindex
        - secure: "re3NcmEUC70IlsnSzeSP8SET/Z8VC5r0CLUespXPG0/mDqxulgDRJC3jZMKy/Aa9TkBGW0MTitazIe7zSyuq+UrmNTN1yH8t04fBsQ5Hu8Lh+ed7mhmJqOVBhTX+uaYsHoQ+7LxTaZz4onzfaJBHuzNC7XIchARKPNelz3+TKs8Vlk+K0awtbEgPqpNIo22VOe/dzxs+AtQF1bwdrmfiSRv3LdJNtH+Dzgh1i4euybhylQh+ugWUHVqTKa6FSfXvvvrhZqCUNbVbRjAmGTL2RkucdqRre37Kz3dd6vL7G3zN9tiCI6m6uH+3Z1pEj2rV+y80GZX+CkcSLeGbfqU6S4GewaBW5+p33p4WGKWGvaU2lOu7dJIMwfMTMjzAXPoKSNA42rMzKtArsYAk14mYRKOj082P2sF3bXyy5zvKCG2m6gJseoWQxqU6tZcjUfoKPMUCZQGXJzgHDkzl9vTPfFl2mTY5zvAvC7BYkxUK1uGA6bbTEqGBnfbY9dSDPk5DYDeN5BcAxwBhtnfHiRF+VnhSt2dsG8FE4eL1MyfQn0iSkqd/UHrJOUCBCzGRrw4ZbDhX+S4zv7qNjbonB5UowbpdinePdRf7PUQWGvRvCHoND3se8FITLZktqIcKjB3WvLx7xF9MevVQZhvsRTmOE4MttQ6xbAM0XSzNmehOWVg="

install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels conda-forge
  - conda update -q conda
  - conda info -a
  - conda create -n test-environment python=$TRAVIS_PYTHON_VERSION pyflakes pytest pytest-doctestplus numpy hypothesis doctr sphinx myst_parser sphinx_rtd_theme pytest-cov
  - source activate test-environment

script:
  - set -e
  - pyflakes .
  - python -We:invalid -We::SyntaxWarning -m compileall -f -q ndindex/
  # The coverage requirement check is done by the coverage report line below
  - PYTEST_FLAGS="$PYTEST_FLAGS -v --cov-fail-under=0";
  - pytest $PYTEST_FLAGS
  - ./run_doctests
  # Make sure it installs
  - python setup.py install
  - if [[ "${DOCS}" == "true" ]]; then
        cd docs;
        make html;
        cd ..;
        if [[ "${TRAVIS_BRANCH}" == "master" ]]; then
            doctr deploy .;
        else
            doctr deploy --no-require-master "_docs-$TRAVIS_BRANCH"
        fi
    fi
  - if [[ "${COVERAGE}" == "true" ]]; then
        bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports";
    fi
  # Here in case codecov fails. This also sets the failing status if the
  # coverage is not 100%.
  - coverage report -m
