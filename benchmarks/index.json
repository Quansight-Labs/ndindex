{"project": "ndindex", "project_url": "https://quansight-labs.github.io/ndindex/", "show_commit_url": "http://github.com/Quansight-Labs/ndindex/commit/", "hash_length": 8, "revision_to_hash": {"0": "b28bf9c12d9e0a045a8a50140fd2745daafdb5b9", "1": "c0d183c4709d9ddf0b4f127655ebc8e497a882bc", "2": "376bf9ce6212e58c97d7f0fe9b1fe01c61153401", "3": "5b3b682e91f5acb7876747c99d5e22ff854410e4", "4": "90c32ba2380114644a2ee985deb47da6d49c9e17", "5": "b965bb27f9e6e6a263893fdcda25b4979dd8a1fb", "7": "4d9f870aad2632f039288cb85de233fcae2dde9a", "8": "bfc828cef3ef9f9e15648a23588d2668b27b1d28", "9": "a200f12841d970666f165d845e9f01ff4e83e8da", "10": "a0b02c9e680899cf1e61e0ea9ed775dd009dd701", "11": "c8c70087126b93ccacafbcce7141abd90610f33f", "12": "1396566fa384aa0f95c916b3ec8ad2add0b940e8", "13": "c4079cbb136b08ff6f8683340678e72069e5e8ae", "14": "d6eca3d4cd2035720ef74a61fcc4f26e27685f04", "15": "e685c4f668b0a1f9373558ae8eb080f39885189c", "16": "95528342dc56c5852788ee9deec285f3f96dd2e8", "17": "954585ad8cfdf4985923e55e156574163d2d4364", "18": "17b4064609ee5d72e64ceb6fcd290d60ad7e927a", "19": "4cd01b3f3bdde3ecefefc6fc092ae78b2f7bf2ac", "20": "a2e91432272384821b4ebb7d57cea46ac919a112", "21": "a274eecf0adaf1c843691eb9f466a0d1b03fa593", "22": "6d3d39930547bbb6c0e5105c5ce74d44562b0034", "23": "1b0bfe2c83be755eb9bb98b292accb6e6bca1251", "24": "66036971396d5d3590d35303ce455dffbb3cd415", "25": "bedb3201095625859e771ceae3337951934ce461", "26": "f3b20b159b6e20712d20b0ab76ef092c8240b966", "27": "e3d8c9fb18fb3225e1ec76f5039a620ff5ea2285", "28": "3ad447b52a0003c5ba963524131ca8c0676a41a0", "29": "f63b99db843da3181680e0facf8eefe759ac476d", "30": "6376b46a8b95983674085f465c684f0afe3306d0", "31": "81367b0077fce29a23f548d954c5f800ebec83ca", "32": "e774ebb3287f7f45292a43cb2d411b2c7455c29b", "33": "3f78d5dd5bf16dffebe95cb90f3186dc87d87844", "34": "8290859c4a3d8e2825050603f7d47f878bf8b010", "35": "844a32174f13052489948682700c17b8028036aa", "36": "5747622007e51675f87597202826a75c4bbc94ea", "37": "8c53fde46d37e95a4f9ac6d284ae2769918bd0b0", "38": "68b49b2af3a25b92a228989c5df52da659fc83c2", "39": "10b0e0952b4bcf045e6867009ed90565eafa3085", "40": "79e17ff9485088d47fc9b0d8d3e47bb8114be2fa", "41": "00c1546d093ae1ea71b3b81fed347ee6d86d725d", "42": "0f70d3df2730ceabd59bc7a626d541116b130643", "43": "1bd9b6ddd244ba1a222a10541f8d92109c1aec2e", "44": "16d9ad0b3383a2be1412c2df77a23d5a73071ab1", "46": "41adcd398dbc865e895b2b8533b9b091de253ded", "47": "1bb2663a61d78a01a21c6f8e2242004a3f17e858", "48": "b1e4db1acd4d0ebfc38cc5c80b4f43a595b83d11", "49": "afc73276c3c05be4281ef68fe6c61d46965cea01", "50": "35050874567828e1a00fff6a67845d1ee0ddb6f0", "51": "9ad8fb3ba992cb3e3a09afb87599dab2a395707a", "52": "e4f8b01d79db381ae37838e2d000d0f56d40e988", "53": "eb8fcc36546dbc75cae06d6a5c2dd4b7a15dd409", "54": "b90bea148223d18430b157065df78e2cb2ba0617", "55": "5d71dfeca31618430c730fe95044b17e93c4d2dd", "56": "18dc99bc4702c3055c29c9e873260c4c2db2a856", "57": "b023d31a63a3651f552f337d30260890a7c7f1a4", "58": "4de4a5d4bedc8f4b46f970f5b0640a9b5e183eb8", "59": "3a605c070fce247ef0b86120c4a36f193e7cff1b", "60": "07af86ed1dd9fa3f6879a5b6179d895c211562fb", "61": "fcafaf501c4920d23132ba8df6d9f1ea2fe278e8", "62": "eb8e2357cf78d05bb5478912b06afae38c848e59", "63": "d55586256dd3bc6d84a17f1c913a77af567a8967", "64": "326b2da444ae448cd66c55302a57d78ab85fe25f", "65": "95fca48bb2534cb15efe041e7d67f4926268e7a7", "66": "15e63f6595a19abbe8bbb4588bb0a1262c61fd64", "67": "e4f73c19f0cd43baa884382db5adcc67d3a16684", "70": "d93bda5a57366f5e61346ade2439cbc52f31cf9d", "71": "c2eb9e94d3fe672f7a83679175673923bbdebfe8", "72": "9275688b8c842cfd668b07e5be2e9804a99babd7", "74": "d363531f7a873de3e20f47be1ddb0a4cbdea3b5e", "75": "fb3f91ab32f79da117c17ea02672dd8544d2359d", "77": "e6733892da0625f133059679e95747995bd0aa4c", "78": "8b7c076237c80ee22c1752493bdf0412b9b72e9d", "79": "3f9a4e0e151241deb9ffec8966c9e82e87203085", "82": "4a946c44facfbf88b521db7d32e0c005fe5182a8", "83": "08b6590956612f711149bc28181b313175e454d4", "85": "902f77b5f70c955cc5ffa66327dc9c4e6f06b7d1", "86": "089f6b81def4e416103ee4f09ab23364d1c4a786", "87": "1ef1efd6ded62b98008f7b9ea1a2755935ce587a", "88": "762be4636fabfc69dc1fd8dc4341c136fa5cb077", "89": "1d4c0ed16d81db10b034bc3619eccf9b314107f1", "90": "8638b4d39375a1e785041a0c9abd43179e802451", "91": "afb33cfd67996792c2b42dcace49039f8ea5541e", "92": "fc374586a5c22dbb8f5ce28676f6064d2dc91d66", "93": "a7bc82f1b1439a2843be165fdf71314fb7526dd6", "94": "811f1105e0a8d8a11c783dd1ddb0edfdbf412f9f", "95": "c472cd75dd93b74cc1d32b35ef2a50da161a8ed8", "96": "1a6f9cde080f62c9d30a1ff50bfc3ef322abb8f9", "97": "47cceeca313fd6d3012c8ce04d49c4f9249816e2", "98": "a914ff13ea244215055bc797676df5dfaa96f23c", "99": "1716cfa815d48341d2e6bde7c280c001a649c98b", "100": "0a735a90cba4dcb947b1759c0b5d9c312ca9f887", "101": "6b4842ddd86ea7e33b2d3dbcf57945997db07b80", "102": "042480533ca9a58a4e521c1358d516597522c0cf", "103": "ba79cb0c71b897f493e546e8850d97d9acd5e44e", "104": "7542c5b2db4e87075e10b1a9e127f4800af752da", "105": "19b597689b15cab4fe5192293009fa63f5b7e2d2", "108": "7e65769cdbc5f10d87b33ec882c03014875b6160", "109": "f8706a6fb6ffac879a0863cb93243f9bb14e6487", "115": "85d9a31d1dd993792ea322f8b6cbf99e92ab2c21", "117": "0297df346f3fccb1deee2077bcf0f849b7f90f33", "119": "1681f7b03aeaa056b9d97baa920cabab5b783af0", "124": "f745350d04cc7df4b06198cf72a3fe3c7080d402", "125": "440151f839b016f5f676995ec273fbb02fd01bc1", "132": "169e05a1768a6e448f266a1a09c91be01e810394", "139": "e8daeffc262d640773418f3f99cf6217455720b9", "142": "9bd57a3c93d56bb9ee8f7b3984145d772ab8b2d7", "145": "4cd260a5a4cc370e159a2333200e42f4badae1a7", "165": "bde54692fbc95d32a58d06fcd89ab0bb9ac0f659", "170": "3adb3e59434cd3d64465665f7baa2abbbee1139d", "178": "4333b4358bb9c125b34a6566a0690e56c174f6de", "179": "6367b37d4d89094038568e43788208caa1f6de38", "227": "be600b3a2739b761438d73fb7c51566e1d432aef", "244": "231e5b6d25792549f18f33ee65619db1a8647b8b", "255": "e799f93ec5c71ba7541b3c9a29aed537d56cefad", "262": "0560fb66a8096206ab423180bb584ff51da108e7", "264": "4973b0b112406c675dffb557aec4e95cf356624d", "323": "0d9d131a5310915f3a51ebe95491e43afcd1dcad", "332": "6b90b7b0e704dbc70d32df5cd3a5a7313b0246c0", "366": "31fb2ac94aa2c12f158c469a7dc3479361959178", "374": "8e18f36a79fc9a810879322c63308106b83c1537", "378": "106ed34da7aae77d47c162e7b4de0ec21856cf07", "389": "c21b9f44a78789ad5273e0b9b3c4a020f8ce2a6a", "395": "8875637bf223f92672db9292ec537c9d98ae382e", "402": "a5baa5a213bf05a442a7344b7195f8b3214f882f", "407": "190075239acee558050160acba3e8e8f05af3244", "411": "031c2cb3eb02b5670f0ccd82cea023e478bde3b7", "426": "26ed82c336e6be33df25f9f3893ccd7ce22bf33a", "436": "f72cf59ae36bd334d16c20a076536347b39ae576", "442": "9bfa50306c4463df27daf95dc6ee7d922a316cfb", "447": "3c9f15ff7b5f132ccfa84e1d8a9b2ec5386b330e", "466": "79e721b933b0863ba9ea3e8362c1d9c734e2477b", "468": "3939d7b4e4a6e3004f4ca2a46305fb69549e97d5", "471": "e23bbb7f655f9757ea22800ed935194d2ad714e4", "475": "3fbf65d461054d575d6aee9acaf5ec45cb992cf0", "509": "0905a1d54f4aa7481113ce5d4902446ab48fecc0", "512": "b690cf20698a4b773b35083eacaff2955285fe58", "518": "59952b4a2ece61d42e3db64045ef5b9c267d9c0c", "524": "4bfb5f08584151587b09add428d0bac9ab499c4f", "551": "8e11023122a4f2d9700091d0c1c3313c2bb5172a", "558": "305a26613261af529307dc33dcec52cf2e462a4b", "588": "61440fd63c2c68285ddb5bc2a5b9c99848597e75", "663": "d15a97481638594f8d7d861b62fd3a0f834ac905", "716": "eca12de330c7644cb508ae590980ec661dd5e7f2", "729": "2a68d94e7280dee6ac8df78acbb4424865ee71c7", "733": "44c09b62cb5785e44e58396777a0661444fac08f", "735": "9e5399fb20f5800474aa2bf081e8323cfeaeabf4", "738": "9dee50098fe26993cb0b824eb042bd8b961ac98a", "756": "071b9d1357e7e28274fb94168858d459b3597179", "759": "c7e6f93e66e0d1b72822d4897706aa219b09c3c4", "777": "00d3aebbc4759d0bb6785f7ae6e141275fd22ca6", "782": "5f4d64ea148f9da950bdecd457275eb5e2633193", "787": "41bd29bfea01b7af93150f74b77657a573c24741", "797": "4e5acdb03add2b3b9c00f1d6bbcec9ca05d7dcfc", "804": "8d36d81778eb40d619b399731ee360572106e89e", "805": "be53243d5a4774f28b2d5de97408662eb06ceb5e", "806": "f376350cd422f78f4bdb43734cc4b7869dda9583", "807": "dd5527c812a516c603100b1faa3d9ade8e79b21e", "837": "fbffb9a7b0d3750c9f74c7b8016b3ee872bb9f64", "838": "1831af736c81e58887d140105dd7c8cb0df56c30", "846": "b58a0163e8783a0e4ce1a4c4e474ca259dec2be6", "849": "60e484b9f923a241d93ee87041990b8bbbebc864", "851": "b606d062f681f9500ba1344834e9a2be00730694", "853": "dfd8ec034fdd33a366bc9a5709403440d705edf2", "854": "e43039a78e3bb715204dad893d853c5625e82d1d", "855": "20d3a93bf374bf1e96db6a97d90b7f73b19e44b3", "856": "a2f38d5827a6576ed893295311e3a5551c5cf865", "859": "ada754f6b4f0dd5a9d25abaa1ca612f04afcf96d", "860": "6f2ff7701bdc21ed2728250d17c417c167432e29", "861": "46ed0ecc727492ee3639624cd163f9ecbbd1ab5c", "862": "727ad68380edbff5a2ffff194be02d7c828ad2df", "863": "0fd01bb9088136a561ad313e28e3a7f8bf7b550e", "864": "048ddc13b7352463f2099b4338c8444043c78ca3", "865": "108fcc06c3c2a1c83bf86d1d081ef365141bb663", "866": "8b102c47f4cf7116f72ae529bfd7f999433c69e6", "867": "033c8aa8f30742389ebedf6a6509868b48f01b7e", "868": "3b246381ca22272b1259829a2682baaac1eb1574", "869": "c233918e88a39bafea750dfb8dfa15c95721ac9d", "870": "855df3bf8ff5a7201b605c9ec10b82582b326aba", "871": "80570c74e93b3c381402421a8ce1d28b18818ad1", "884": "d935e9ccf9cccbe5f6394da2bf444c39bfcac720", "885": "d3c6b232bd41b95903aa5b3f800313af0ad1fa75", "887": "5c1e177d1995927352d466528f6f60ba16ccbccb", "893": "e849e58bbcebc8ce15d2468c7093f7cfcfd657c7", "906": "42f00e44ec4117dec4c5b32630a5578d2c0fd874", "908": "e0d1a7081944e7ddb007e20f584101b74728d988", "913": "bb1134b0fab1d677944960e1561975f004069794", "915": "08edc9160460afec23b111ed8c56322bc31f128d", "918": "9d91a084719145cf78a9cdd00aed9883e205ef2b", "919": "197edd0058d04b177aedff221e458d43a50c4778", "920": "fa61d07b54649ef23d1573a7269e28c1bd02a397", "921": "fcd0c0a8752bdbf35e47cdf9c492b7f11dadb509", "922": "9a26bcad6ace3704ca11ddce19aa0c7bfda7a0bf", "923": "3a76d78d0278d56a9f7f86b3b5588922014ffa6c", "924": "577d469b826e1730080e72a1273badcbd6bd601c", "925": "1143b9e4288158c3239f0026c36be6c476291c10", "926": "b46e569c4b531e7d6c0e0cb3f90295b9c0eff717", "927": "cb931602364b9c9c4faf6dcbf4030280c12fce09", "928": "41af784cfa4fa8a1a8f6bdbddc6b7cc4b7ec7d53", "929": "d8e75f070fd396af36e23d3a3471253cb7095827", "931": "545411ff69df286249a060e6abcedafdd96430db", "932": "bae5c206aad969675fb14e309d313eddf056978a", "934": "905ccf412cc78add33977d386e4b56055ae8dab1"}, "revision_to_date": {"0": 1583538957000, "1": 1583790094000, "2": 1583790118000, "3": 1583790685000, "4": 1583790729000, "5": 1583792294000, "7": 1583792435000, "8": 1583792509000, "9": 1583792590000, "10": 1583793502000, "11": 1583793580000, "12": 1583793612000, "13": 1583958669000, "14": 1583959722000, "15": 1583964882000, "16": 1583964958000, "17": 1583964976000, "18": 1583965012000, "19": 1583965076000, "20": 1583965132000, "21": 1584123153000, "22": 1584131406000, "23": 1584131447000, "24": 1584131466000, "25": 1584131532000, "26": 1584135937000, "27": 1584146798000, "28": 1584146913000, "29": 1584147016000, "30": 1584391246000, "31": 1584391382000, "32": 1584391392000, "33": 1584392160000, "34": 1584392173000, "35": 1584393173000, "36": 1584393603000, "37": 1584393613000, "38": 1584394698000, "39": 1584394726000, "40": 1584394738000, "41": 1584394759000, "42": 1584394865000, "43": 1584470755000, "44": 1584470772000, "46": 1584735780000, "47": 1584735884000, "48": 1584740377000, "49": 1584740451000, "50": 1584741764000, "51": 1584742362000, "52": 1584742395000, "53": 1585173430000, "54": 1585173448000, "55": 1585174737000, "56": 1585175562000, "57": 1585175583000, "58": 1585346421000, "59": 1585946250000, "60": 1585948265000, "61": 1585949360000, "62": 1585951501000, "63": 1585951683000, "64": 1585951743000, "65": 1585951913000, "66": 1585951926000, "67": 1585951963000, "70": 1585953756000, "71": 1585953774000, "72": 1585954059000, "74": 1585955871000, "75": 1585955903000, "77": 1585956832000, "78": 1585956853000, "79": 1585956900000, "82": 1586372699000, "83": 1586378143000, "85": 1586378816000, "86": 1586378883000, "87": 1586379204000, "88": 1586379355000, "89": 1586379387000, "90": 1586380996000, "91": 1586381061000, "92": 1586384186000, "93": 1586384283000, "94": 1586384390000, "95": 1586384568000, "96": 1586384636000, "97": 1586384711000, "98": 1586399719000, "99": 1586456598000, "100": 1586456702000, "101": 1586457019000, "102": 1586457063000, "103": 1586457336000, "104": 1586457798000, "105": 1586458855000, "108": 1586464426000, "109": 1586464700000, "115": 1587676541000, "117": 1587676835000, "119": 1587677448000, "124": 1587682394000, "125": 1587682670000, "132": 1587774172000, "139": 1588100584000, "142": 1588100950000, "145": 1588105031000, "165": 1588277763000, "170": 1588367760000, "178": 1588369501000, "179": 1588369849000, "227": 1591120423000, "244": 1591705388000, "255": 1591825265000, "262": 1591826974000, "264": 1591829803000, "323": 1592436858000, "332": 1592508399000, "366": 1593005453000, "374": 1593187703000, "378": 1593207792000, "389": 1593228862000, "395": 1593328482000, "402": 1593463937000, "407": 1593468265000, "411": 1593469123000, "426": 1595007507000, "436": 1595286977000, "442": 1595364004000, "447": 1595369923000, "466": 1595447727000, "468": 1595447805000, "471": 1595449431000, "475": 1595456268000, "509": 1595920888000, "512": 1595966138000, "518": 1596232524000, "524": 1596464520000, "551": 1596668176000, "558": 1596837835000, "588": 1597357843000, "663": 1598466695000, "716": 1599677704000, "729": 1599791809000, "733": 1600121785000, "735": 1600123978000, "738": 1600131474000, "756": 1601497328000, "759": 1602199043000, "777": 1603476076000, "782": 1603600220000, "787": 1604448590000, "797": 1607548882000, "804": 1607556591000, "805": 1607556606000, "806": 1607556642000, "807": 1607556654000, "837": 1608255661000, "838": 1608331771000, "846": 1608337663000, "849": 1608761695000, "851": 1608765233000, "853": 1609889275000, "854": 1609890403000, "855": 1609890897000, "856": 1609890951000, "859": 1610593720000, "860": 1610643070000, "861": 1610755359000, "862": 1611622126000, "863": 1611622458000, "864": 1611622498000, "865": 1611622516000, "866": 1611640908000, "867": 1611641065000, "868": 1611641326000, "869": 1611651176000, "870": 1611652592000, "871": 1612324477000, "884": 1612392968000, "885": 1612393948000, "887": 1612818542000, "893": 1614686770000, "906": 1615246324000, "908": 1615251128000, "913": 1615353038000, "915": 1616541501000, "918": 1616542588000, "919": 1616542673000, "920": 1616543474000, "921": 1616622700000, "922": 1616622757000, "923": 1616622842000, "924": 1616623198000, "925": 1616624763000, "926": 1616637213000, "927": 1616637332000, "928": 1616806707000, "929": 1617090986000, "931": 1617657887000, "932": 1617657981000, "934": 1617658413000}, "params": {"arch": ["x86_64"], "cpu": ["Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz"], "machine": ["Aarons-Retina-MacBook-Pro.local"], "os": ["Darwin 18.6.0"], "ram": ["17179869184"], "python": ["3.8"], "branch": ["master", "performance2", "as_subchunks-cases"]}, "graph_param_list": [{"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz", "machine": "Aarons-Retina-MacBook-Pro.local", "os": "Darwin 18.6.0", "ram": "17179869184", "python": "3.8", "branch": "master"}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz", "machine": "Aarons-Retina-MacBook-Pro.local", "os": "Darwin 18.6.0", "ram": "17179869184", "python": "3.8", "branch": "as_subchunks-cases"}, {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz", "machine": "Aarons-Retina-MacBook-Pro.local", "os": "Darwin 18.6.0", "ram": "17179869184", "python": "3.8", "branch": "performance2"}], "benchmarks": {"boolean_array.TimeBooleanArray.time_constructor_array": {"code": "class TimeBooleanArray:\n    def time_constructor_array(self):\n        BooleanArray(self.ba.array)\n\n    def setup(self):\n        self.ba = BooleanArray([[False, True], [True, False]]*100)", "min_run_count": 2, "name": "boolean_array.TimeBooleanArray.time_constructor_array", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "cd8bdc281ede5efda8491d366e84ad3e98f664b77462aaf4a28ee6aa0a22d930", "warmup_time": -1}, "boolean_array.TimeBooleanArray.time_constructor_bool": {"code": "class TimeBooleanArray:\n    def time_constructor_bool(self):\n        BooleanArray(True)\n\n    def setup(self):\n        self.ba = BooleanArray([[False, True], [True, False]]*100)", "min_run_count": 2, "name": "boolean_array.TimeBooleanArray.time_constructor_bool", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ab625bf4cd8618e2df5bc0f33926b9a2f9adead11687d7ca41449589f31a8623", "warmup_time": -1}, "boolean_array.TimeBooleanArray.time_constructor_invalid": {"code": "class TimeBooleanArray:\n    def time_constructor_invalid(self):\n        try:\n            BooleanArray(np.array([0]))\n        except TypeError:\n            pass\n\n    def setup(self):\n        self.ba = BooleanArray([[False, True], [True, False]]*100)", "min_run_count": 2, "name": "boolean_array.TimeBooleanArray.time_constructor_invalid", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "f6b9e7b13674c7279aad1f15d130479e4d1dd3d9a39d9bea01c06c0c06593b03", "warmup_time": -1}, "boolean_array.TimeBooleanArray.time_constructor_list": {"code": "class TimeBooleanArray:\n    def time_constructor_list(self):\n        BooleanArray([[False, True], [True, False]]*100)\n\n    def setup(self):\n        self.ba = BooleanArray([[False, True], [True, False]]*100)", "min_run_count": 2, "name": "boolean_array.TimeBooleanArray.time_constructor_list", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "8607570319fce03721ca284f5c63586ba3d768534d9cf479e40c1f035ba51997", "warmup_time": -1}, "boolean_array.TimeBooleanArray.time_isempty": {"code": "class TimeBooleanArray:\n    def time_isempty(self):\n        self.ba.isempty()\n\n    def setup(self):\n        self.ba = BooleanArray([[False, True], [True, False]]*100)", "min_run_count": 2, "name": "boolean_array.TimeBooleanArray.time_isempty", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ea56fca77f6172dede8601918225165e343f410d94a8cb297403138151c15e26", "warmup_time": -1}, "boolean_array.TimeBooleanArray.time_isempty_shape": {"code": "class TimeBooleanArray:\n    def time_isempty_shape(self):\n        self.ba.isempty((200, 2, 5))\n\n    def setup(self):\n        self.ba = BooleanArray([[False, True], [True, False]]*100)", "min_run_count": 2, "name": "boolean_array.TimeBooleanArray.time_isempty_shape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "4d0e53196c1c5a3dfc00d4f7dca85aeed21ae3d341989072e9028f6c60ce0f91", "warmup_time": -1}, "boolean_array.TimeBooleanArray.time_newshape": {"code": "class TimeBooleanArray:\n    def time_newshape(self):\n        self.ba.newshape((200, 2, 5))\n\n    def setup(self):\n        self.ba = BooleanArray([[False, True], [True, False]]*100)", "min_run_count": 2, "name": "boolean_array.TimeBooleanArray.time_newshape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "af9c4ccc1d35423c9d6a9f9106a1edff20e36b9e98ffffc3b19b5a071e5d1b86", "warmup_time": -1}, "boolean_array.TimeBooleanArray.time_reduce": {"code": "class TimeBooleanArray:\n    def time_reduce(self):\n        self.ba.reduce()\n\n    def setup(self):\n        self.ba = BooleanArray([[False, True], [True, False]]*100)", "min_run_count": 2, "name": "boolean_array.TimeBooleanArray.time_reduce", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "4e343e11ebdf21f6fd3fd0ccb8da46a98c2a896d6484642dee0cbf056cb9c32b", "warmup_time": -1}, "boolean_array.TimeBooleanArray.time_reduce_shape": {"code": "class TimeBooleanArray:\n    def time_reduce_shape(self):\n        self.ba.reduce((200, 2, 5))\n\n    def setup(self):\n        self.ba = BooleanArray([[False, True], [True, False]]*100)", "min_run_count": 2, "name": "boolean_array.TimeBooleanArray.time_reduce_shape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c0af92038e6a852b9b7606269867f20647d8ee625c9689af658c7486c574418c", "warmup_time": -1}, "boolean_array.TimeBooleanArray.time_reduce_shape_error": {"code": "class TimeBooleanArray:\n    def time_reduce_shape_error(self):\n        try:\n            self.ba.reduce(10)\n        except IndexError:\n            pass\n\n    def setup(self):\n        self.ba = BooleanArray([[False, True], [True, False]]*100)", "min_run_count": 2, "name": "boolean_array.TimeBooleanArray.time_reduce_shape_error", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "dd0d503a27af908bec3b74b7330c06f65c54e609e5ba30aab3a2789542d9a6ec", "warmup_time": -1}, "ellipsis.Timeellipsis.time_constructor_int": {"code": "class Timeellipsis:\n    def time_constructor_int(self):\n        ellipsis()\n\n    def setup(self):\n        self.e = ellipsis()", "min_run_count": 2, "name": "ellipsis.Timeellipsis.time_constructor_int", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "6849d931d21f0198afde03b41371d9c54ce1923380b1f7cefcc599fe7232b240", "warmup_time": -1}, "ellipsis.Timeellipsis.time_isempty": {"code": "class Timeellipsis:\n    def time_isempty(self):\n        self.e.isempty()\n\n    def setup(self):\n        self.e = ellipsis()", "min_run_count": 2, "name": "ellipsis.Timeellipsis.time_isempty", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "d47b422f100ba3e52328ddbf74baeb4a717b503980c2860d76f2f94ebe866f24", "warmup_time": -1}, "ellipsis.Timeellipsis.time_isempty_shape": {"code": "class Timeellipsis:\n    def time_isempty_shape(self):\n        self.e.isempty((10, 5))\n\n    def setup(self):\n        self.e = ellipsis()", "min_run_count": 2, "name": "ellipsis.Timeellipsis.time_isempty_shape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "048fc960a55038722e4207de489a9876009a8e21cfb4c9b291ffa0ffaeb481ac", "warmup_time": -1}, "ellipsis.Timeellipsis.time_newshape": {"code": "class Timeellipsis:\n    def time_newshape(self):\n        self.e.newshape((10, 5))\n\n    def setup(self):\n        self.e = ellipsis()", "min_run_count": 2, "name": "ellipsis.Timeellipsis.time_newshape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "fe59b01d0f529e86a12ff4cde7baf40bfcf9cde056de5cd600d7332e7468d977", "warmup_time": -1}, "ellipsis.Timeellipsis.time_reduce": {"code": "class Timeellipsis:\n    def time_reduce(self):\n        self.e.reduce()\n\n    def setup(self):\n        self.e = ellipsis()", "min_run_count": 2, "name": "ellipsis.Timeellipsis.time_reduce", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "e73b679b0edc7a2d827c02ff27bc3c343dde02aff9a225d92a65e1e71350422d", "warmup_time": -1}, "ellipsis.Timeellipsis.time_reduce_shape": {"code": "class Timeellipsis:\n    def time_reduce_shape(self):\n        self.e.reduce(10)\n\n    def setup(self):\n        self.e = ellipsis()", "min_run_count": 2, "name": "ellipsis.Timeellipsis.time_reduce_shape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "a72221136cc8e2994426e54dba67c71c5e5262d5cca00dd8d13e692ce3cc263a", "warmup_time": -1}, "equality.TimeEquality.time_equality_ndindex_builtin": {"code": "class TimeEquality:\n    def time_equality_ndindex_builtin(self):\n        for ndindex_idx in self.ndindex_types:\n            for builtin_idx in self.builtin_types:\n                ndindex_idx == builtin_idx\n\n    def setup(self):\n        self.builtin_types = [0, np.int64(0), [0, 1], True, False,\n                              np.array([0, 1]), np.array([True, False]),\n                              np.array(True), np.bool_(True), np.array(0),\n                              ..., slice(0, 1), None, (slice(0, 1), ..., 0)]\n        self.ndindex_types = [ndindex(i) for i in self.builtin_types]", "min_run_count": 2, "name": "equality.TimeEquality.time_equality_ndindex_builtin", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c6c13e4647fb3642dbef8565d3a2fc913920acd81979e3c4248d05c5a51f774a", "warmup_time": -1}, "equality.TimeEquality.time_equality_ndindex_ndindex": {"code": "class TimeEquality:\n    def time_equality_ndindex_ndindex(self):\n        for ndindex_idx1 in self.ndindex_types:\n            for ndindex_idx2 in self.ndindex_types:\n                ndindex_idx1 == ndindex_idx2\n\n    def setup(self):\n        self.builtin_types = [0, np.int64(0), [0, 1], True, False,\n                              np.array([0, 1]), np.array([True, False]),\n                              np.array(True), np.bool_(True), np.array(0),\n                              ..., slice(0, 1), None, (slice(0, 1), ..., 0)]\n        self.ndindex_types = [ndindex(i) for i in self.builtin_types]", "min_run_count": 2, "name": "equality.TimeEquality.time_equality_ndindex_ndindex", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "a45cb833407a31b7c1eb0940eab5d5465c6e6ee1b4d3e6d00e16849ec7111f79", "warmup_time": -1}, "equality.TimeEquality.time_hash": {"code": "class TimeEquality:\n    def time_hash(self):\n        for ndindex_idx in self.ndindex_types:\n            hash(ndindex_idx)\n\n    def setup(self):\n        self.builtin_types = [0, np.int64(0), [0, 1], True, False,\n                              np.array([0, 1]), np.array([True, False]),\n                              np.array(True), np.bool_(True), np.array(0),\n                              ..., slice(0, 1), None, (slice(0, 1), ..., 0)]\n        self.ndindex_types = [ndindex(i) for i in self.builtin_types]", "min_run_count": 2, "name": "equality.TimeEquality.time_hash", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "8e2d34a2ae4a9a00f3d7419559f22d212acd6d52c405058c10adc577eda68865", "warmup_time": -1}, "integer.TimeInteger.time_constructor_int": {"code": "class TimeInteger:\n    def time_constructor_int(self):\n        Integer(0)\n\n    def setup(self):\n        self.i10 = Integer(10)\n        self.in10 = Integer(-10)", "min_run_count": 2, "name": "integer.TimeInteger.time_constructor_int", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "7f59c645803a234a282c6ac5b122ca1ccee0a6a8ad9e7b59bb5f07681c5f8d74", "warmup_time": -1}, "integer.TimeInteger.time_constructor_int64": {"code": "class TimeInteger:\n    def time_constructor_int64(self):\n        Integer(np.int64(0))\n\n    def setup(self):\n        self.i10 = Integer(10)\n        self.in10 = Integer(-10)", "min_run_count": 2, "name": "integer.TimeInteger.time_constructor_int64", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c317ba53e803f65d5750db44d25486c33bc815d07e3ed11ee61711ba76ebede6", "warmup_time": -1}, "integer.TimeInteger.time_constructor_invalid": {"code": "class TimeInteger:\n    def time_constructor_invalid(self):\n        try:\n            Integer(0.5)\n        except TypeError:\n            pass\n\n    def setup(self):\n        self.i10 = Integer(10)\n        self.in10 = Integer(-10)", "min_run_count": 2, "name": "integer.TimeInteger.time_constructor_invalid", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "76ae8dd4ea91c462c9234decaf12142c5257af46a843c6f6dfe6c62469e86dcf", "warmup_time": -1}, "integer.TimeInteger.time_isempty": {"code": "class TimeInteger:\n    def time_isempty(self):\n        self.in10.isempty()\n\n    def setup(self):\n        self.i10 = Integer(10)\n        self.in10 = Integer(-10)", "min_run_count": 2, "name": "integer.TimeInteger.time_isempty", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "a0717f809c80a90b4c9fcc034ae06690156bd315b3418d797d56f5d8dd6f2d7b", "warmup_time": -1}, "integer.TimeInteger.time_isempty_shape": {"code": "class TimeInteger:\n    def time_isempty_shape(self):\n        self.in10.isempty((10, 5))\n\n    def setup(self):\n        self.i10 = Integer(10)\n        self.in10 = Integer(-10)", "min_run_count": 2, "name": "integer.TimeInteger.time_isempty_shape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "08beeffa4e948d178c2b904ad8014a172af1b1e946b6e2276888669cdbbc6264", "warmup_time": -1}, "integer.TimeInteger.time_newshape": {"code": "class TimeInteger:\n    def time_newshape(self):\n        self.in10.newshape((10, 5))\n\n    def setup(self):\n        self.i10 = Integer(10)\n        self.in10 = Integer(-10)", "min_run_count": 2, "name": "integer.TimeInteger.time_newshape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "9c9ddbc29db19d83fa20e5b29a1048eacab67a98c8224c7955cb0aac6f6e1e5f", "warmup_time": -1}, "integer.TimeInteger.time_reduce": {"code": "class TimeInteger:\n    def time_reduce(self):\n        self.i10.reduce()\n\n    def setup(self):\n        self.i10 = Integer(10)\n        self.in10 = Integer(-10)", "min_run_count": 2, "name": "integer.TimeInteger.time_reduce", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "dd57dc7f02955f70a029067c777264c07e4acd9dee77c59a74f72b1cbe571719", "warmup_time": -1}, "integer.TimeInteger.time_reduce_shape": {"code": "class TimeInteger:\n    def time_reduce_shape(self):\n        self.in10.reduce(10)\n\n    def setup(self):\n        self.i10 = Integer(10)\n        self.in10 = Integer(-10)", "min_run_count": 2, "name": "integer.TimeInteger.time_reduce_shape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c93b5638ce282ba95cffbe5738d0497f8a43b246f9e34d1e5f64b302acb0adc2", "warmup_time": -1}, "integer.TimeInteger.time_reduce_shape_error": {"code": "class TimeInteger:\n    def time_reduce_shape_error(self):\n        try:\n            self.i10.reduce(10)\n        except IndexError:\n            pass\n\n    def setup(self):\n        self.i10 = Integer(10)\n        self.in10 = Integer(-10)", "min_run_count": 2, "name": "integer.TimeInteger.time_reduce_shape_error", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "486567c6bb97de80153db22550fb69896e11957eeca335322ce9c9a101731276", "warmup_time": -1}, "integer_array.TimeIntegerArray.time_constructor_array": {"code": "class TimeIntegerArray:\n    def time_constructor_array(self):\n        IntegerArray(self.ia.array)\n\n    def setup(self):\n        self.ia = IntegerArray([[1, 2], [2, -1]]*100)", "min_run_count": 2, "name": "integer_array.TimeIntegerArray.time_constructor_array", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "189dae0de14a32f0059909640aae7ddb65a3e1bd2728c1dccb462e9ab7a1a8ce", "warmup_time": -1}, "integer_array.TimeIntegerArray.time_constructor_invalid": {"code": "class TimeIntegerArray:\n    def time_constructor_invalid(self):\n        try:\n            IntegerArray(np.array([0.5]))\n        except TypeError:\n            pass\n\n    def setup(self):\n        self.ia = IntegerArray([[1, 2], [2, -1]]*100)", "min_run_count": 2, "name": "integer_array.TimeIntegerArray.time_constructor_invalid", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "70928acb55a9fe9f51abf0e2c5502a3ea6b1dcfbf512108594e3dcdd0594fdb4", "warmup_time": -1}, "integer_array.TimeIntegerArray.time_constructor_list": {"code": "class TimeIntegerArray:\n    def time_constructor_list(self):\n        IntegerArray([[1, 2], [2, -1]]*100)\n\n    def setup(self):\n        self.ia = IntegerArray([[1, 2], [2, -1]]*100)", "min_run_count": 2, "name": "integer_array.TimeIntegerArray.time_constructor_list", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "8ed28a0b0f4855468e254ae4f1a6a9244291ab820cd4a598c6c9d2ffd0eb58f2", "warmup_time": -1}, "integer_array.TimeIntegerArray.time_isempty": {"code": "class TimeIntegerArray:\n    def time_isempty(self):\n        self.ia.isempty()\n\n    def setup(self):\n        self.ia = IntegerArray([[1, 2], [2, -1]]*100)", "min_run_count": 2, "name": "integer_array.TimeIntegerArray.time_isempty", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c6a51eff5a85a3b7b61f62e0b2b530fcf0481f734674aa07fecdbb6d617efee4", "warmup_time": -1}, "integer_array.TimeIntegerArray.time_isempty_shape": {"code": "class TimeIntegerArray:\n    def time_isempty_shape(self):\n        self.ia.isempty((10, 5))\n\n    def setup(self):\n        self.ia = IntegerArray([[1, 2], [2, -1]]*100)", "min_run_count": 2, "name": "integer_array.TimeIntegerArray.time_isempty_shape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "46aedba0c2fbf8cd981b532f4fca925da56a4b5dbeaf1d3fbf73c063ec88b921", "warmup_time": -1}, "integer_array.TimeIntegerArray.time_newshape": {"code": "class TimeIntegerArray:\n    def time_newshape(self):\n        self.ia.newshape((10, 5))\n\n    def setup(self):\n        self.ia = IntegerArray([[1, 2], [2, -1]]*100)", "min_run_count": 2, "name": "integer_array.TimeIntegerArray.time_newshape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "aba800a50b3301739ff5b71e6ea49ffac475f066f96586ac093b0596b4b07387", "warmup_time": -1}, "integer_array.TimeIntegerArray.time_reduce": {"code": "class TimeIntegerArray:\n    def time_reduce(self):\n        self.ia.reduce()\n\n    def setup(self):\n        self.ia = IntegerArray([[1, 2], [2, -1]]*100)", "min_run_count": 2, "name": "integer_array.TimeIntegerArray.time_reduce", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "341db5f88e2717cf217bdbd6118f5b68754d20c7ba6c37159760d475bf20b85e", "warmup_time": -1}, "integer_array.TimeIntegerArray.time_reduce_shape": {"code": "class TimeIntegerArray:\n    def time_reduce_shape(self):\n        self.ia.reduce(10)\n\n    def setup(self):\n        self.ia = IntegerArray([[1, 2], [2, -1]]*100)", "min_run_count": 2, "name": "integer_array.TimeIntegerArray.time_reduce_shape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "5161209d463141c3d3b49622e335a26519cfc3764f96a474fe1cfcd4ff2705fa", "warmup_time": -1}, "integer_array.TimeIntegerArray.time_reduce_shape_error": {"code": "class TimeIntegerArray:\n    def time_reduce_shape_error(self):\n        try:\n            self.ia.reduce(2)\n        except IndexError:\n            pass\n\n    def setup(self):\n        self.ia = IntegerArray([[1, 2], [2, -1]]*100)", "min_run_count": 2, "name": "integer_array.TimeIntegerArray.time_reduce_shape_error", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "d4c7438476c0196b11384d99356562e8d24a27a4719f029855b35bd41cdf5faa", "warmup_time": -1}, "ndindex.BuiltinTypes.time_ndindex_Ellipsis": {"code": "class BuiltinTypes:\n    def time_ndindex_Ellipsis(self):\n        ndindex(...)\n\n    def setup(self):\n        self.int64 = np.int64(1)\n        self.integer_array = np.array([[1, 2], [-1, 2]])\n        self.boolean_array = np.array([[True, False], [False, False]])\n        self.bool_ = np.bool_(False)\n        self.tuple = (slice(0, 4, 2), ..., 1)", "min_run_count": 2, "name": "ndindex.BuiltinTypes.time_ndindex_Ellipsis", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "b4be70942993825ef30db51f8fcec9226356ad688b95714a7b732e46a5eaaaa7", "warmup_time": -1}, "ndindex.BuiltinTypes.time_ndindex_bool": {"code": "class BuiltinTypes:\n    def time_ndindex_bool(self):\n        ndindex(False)\n\n    def setup(self):\n        self.int64 = np.int64(1)\n        self.integer_array = np.array([[1, 2], [-1, 2]])\n        self.boolean_array = np.array([[True, False], [False, False]])\n        self.bool_ = np.bool_(False)\n        self.tuple = (slice(0, 4, 2), ..., 1)", "min_run_count": 2, "name": "ndindex.BuiltinTypes.time_ndindex_bool", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "fff38d43c867478c4a1e316ab96e856eae9ae26e945c5261067e7523457bd378", "warmup_time": -1}, "ndindex.BuiltinTypes.time_ndindex_bool_": {"code": "class BuiltinTypes:\n    def time_ndindex_bool_(self):\n        ndindex(self.bool_)\n\n    def setup(self):\n        self.int64 = np.int64(1)\n        self.integer_array = np.array([[1, 2], [-1, 2]])\n        self.boolean_array = np.array([[True, False], [False, False]])\n        self.bool_ = np.bool_(False)\n        self.tuple = (slice(0, 4, 2), ..., 1)", "min_run_count": 2, "name": "ndindex.BuiltinTypes.time_ndindex_bool_", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "502cf9687c12db578c469113f8619c466dd318e60b9944d6089e5e108a0de587", "warmup_time": -1}, "ndindex.BuiltinTypes.time_ndindex_boolean_array": {"code": "class BuiltinTypes:\n    def time_ndindex_boolean_array(self):\n        ndindex(self.boolean_array)\n\n    def setup(self):\n        self.int64 = np.int64(1)\n        self.integer_array = np.array([[1, 2], [-1, 2]])\n        self.boolean_array = np.array([[True, False], [False, False]])\n        self.bool_ = np.bool_(False)\n        self.tuple = (slice(0, 4, 2), ..., 1)", "min_run_count": 2, "name": "ndindex.BuiltinTypes.time_ndindex_boolean_array", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "508c01fac49f7d5cfe287cf2363fd65c776345d39478eef401811791e71c78ad", "warmup_time": -1}, "ndindex.BuiltinTypes.time_ndindex_int": {"code": "class BuiltinTypes:\n    def time_ndindex_int(self):\n        ndindex(1)\n\n    def setup(self):\n        self.int64 = np.int64(1)\n        self.integer_array = np.array([[1, 2], [-1, 2]])\n        self.boolean_array = np.array([[True, False], [False, False]])\n        self.bool_ = np.bool_(False)\n        self.tuple = (slice(0, 4, 2), ..., 1)", "min_run_count": 2, "name": "ndindex.BuiltinTypes.time_ndindex_int", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1eb346f8e3dc12c8d3bba66212079c69bb4966efa2945cd69cf12823d0638400", "warmup_time": -1}, "ndindex.BuiltinTypes.time_ndindex_int64": {"code": "class BuiltinTypes:\n    def time_ndindex_int64(self):\n        ndindex(self.int64)\n\n    def setup(self):\n        self.int64 = np.int64(1)\n        self.integer_array = np.array([[1, 2], [-1, 2]])\n        self.boolean_array = np.array([[True, False], [False, False]])\n        self.bool_ = np.bool_(False)\n        self.tuple = (slice(0, 4, 2), ..., 1)", "min_run_count": 2, "name": "ndindex.BuiltinTypes.time_ndindex_int64", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "5bb04a9d08d6a69f4108de10d580f981dfc6a67eaa55ea93fa79e96ca7fd48b5", "warmup_time": -1}, "ndindex.BuiltinTypes.time_ndindex_integer_array": {"code": "class BuiltinTypes:\n    def time_ndindex_integer_array(self):\n        ndindex(self.integer_array)\n\n    def setup(self):\n        self.int64 = np.int64(1)\n        self.integer_array = np.array([[1, 2], [-1, 2]])\n        self.boolean_array = np.array([[True, False], [False, False]])\n        self.bool_ = np.bool_(False)\n        self.tuple = (slice(0, 4, 2), ..., 1)", "min_run_count": 2, "name": "ndindex.BuiltinTypes.time_ndindex_integer_array", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "caf15bbcfd721c5f30dac2f2d38a0fc079c53bcca5be7eaac107a0aede4a0515", "warmup_time": -1}, "ndindex.BuiltinTypes.time_ndindex_newaxis": {"code": "class BuiltinTypes:\n    def time_ndindex_newaxis(self):\n        ndindex(None)\n\n    def setup(self):\n        self.int64 = np.int64(1)\n        self.integer_array = np.array([[1, 2], [-1, 2]])\n        self.boolean_array = np.array([[True, False], [False, False]])\n        self.bool_ = np.bool_(False)\n        self.tuple = (slice(0, 4, 2), ..., 1)", "min_run_count": 2, "name": "ndindex.BuiltinTypes.time_ndindex_newaxis", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "e5411fa94c86221f309844a1298acbf9f6be850e25f8c60fac1901b9990e8854", "warmup_time": -1}, "ndindex.BuiltinTypes.time_ndindex_slice": {"code": "class BuiltinTypes:\n    def time_ndindex_slice(self):\n        ndindex(slice(0, 4, 2))\n\n    def setup(self):\n        self.int64 = np.int64(1)\n        self.integer_array = np.array([[1, 2], [-1, 2]])\n        self.boolean_array = np.array([[True, False], [False, False]])\n        self.bool_ = np.bool_(False)\n        self.tuple = (slice(0, 4, 2), ..., 1)", "min_run_count": 2, "name": "ndindex.BuiltinTypes.time_ndindex_slice", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ddbe0a841d69c200562b4b156b7efe48cba88bbb1354e720b98277085118b656", "warmup_time": -1}, "ndindex.BuiltinTypes.time_ndindex_tuple": {"code": "class BuiltinTypes:\n    def time_ndindex_tuple(self):\n        ndindex(self.tuple)\n\n    def setup(self):\n        self.int64 = np.int64(1)\n        self.integer_array = np.array([[1, 2], [-1, 2]])\n        self.boolean_array = np.array([[True, False], [False, False]])\n        self.bool_ = np.bool_(False)\n        self.tuple = (slice(0, 4, 2), ..., 1)", "min_run_count": 2, "name": "ndindex.BuiltinTypes.time_ndindex_tuple", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "017d469ed5e71b504e9622051c04e306a4bd1a70c14f7f925194f3cbcd545bff", "warmup_time": -1}, "ndindex.NDIndexTypes.time_ndindex_BooleanArray": {"code": "class NDIndexTypes:\n    def time_ndindex_BooleanArray(self):\n        ndindex(self.boolean_array)\n\n    def setup(self):\n        from ndindex import (Slice, Tuple, Integer, ellipsis, Newaxis,\n                             IntegerArray, BooleanArray)\n        self.slice = Slice(0, 4, 2)\n        self.integer = Integer(1)\n        self.tuple = Tuple(self.slice, ..., 0)\n        self.ellipsis = ellipsis()\n        self.newaxis = Newaxis()\n        self.integer_array = IntegerArray([[1, 2], [-1, 2]])\n        self.boolean_array = BooleanArray([[True, False], [False, False]])", "min_run_count": 2, "name": "ndindex.NDIndexTypes.time_ndindex_BooleanArray", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "d8fac6f3f470527e564c12441b9974048a9edb50c7f0be6c38839b84fe240f31", "warmup_time": -1}, "ndindex.NDIndexTypes.time_ndindex_Integer": {"code": "class NDIndexTypes:\n    def time_ndindex_Integer(self):\n        ndindex(self.integer)\n\n    def setup(self):\n        from ndindex import (Slice, Tuple, Integer, ellipsis, Newaxis,\n                             IntegerArray, BooleanArray)\n        self.slice = Slice(0, 4, 2)\n        self.integer = Integer(1)\n        self.tuple = Tuple(self.slice, ..., 0)\n        self.ellipsis = ellipsis()\n        self.newaxis = Newaxis()\n        self.integer_array = IntegerArray([[1, 2], [-1, 2]])\n        self.boolean_array = BooleanArray([[True, False], [False, False]])", "min_run_count": 2, "name": "ndindex.NDIndexTypes.time_ndindex_Integer", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "ea49d01afc4336dd3748bcfd55a2d0487d42d31866f1bd062b583d928dba13d8", "warmup_time": -1}, "ndindex.NDIndexTypes.time_ndindex_IntegerArray": {"code": "class NDIndexTypes:\n    def time_ndindex_IntegerArray(self):\n        ndindex(self.integer_array)\n\n    def setup(self):\n        from ndindex import (Slice, Tuple, Integer, ellipsis, Newaxis,\n                             IntegerArray, BooleanArray)\n        self.slice = Slice(0, 4, 2)\n        self.integer = Integer(1)\n        self.tuple = Tuple(self.slice, ..., 0)\n        self.ellipsis = ellipsis()\n        self.newaxis = Newaxis()\n        self.integer_array = IntegerArray([[1, 2], [-1, 2]])\n        self.boolean_array = BooleanArray([[True, False], [False, False]])", "min_run_count": 2, "name": "ndindex.NDIndexTypes.time_ndindex_IntegerArray", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "5cd60dc2f1e8e2f14c545bab1c10d8c9a2db5655f6ebce44858ec7ca9c044d91", "warmup_time": -1}, "ndindex.NDIndexTypes.time_ndindex_Newaxis": {"code": "class NDIndexTypes:\n    def time_ndindex_Newaxis(self):\n        ndindex(self.newaxis)\n\n    def setup(self):\n        from ndindex import (Slice, Tuple, Integer, ellipsis, Newaxis,\n                             IntegerArray, BooleanArray)\n        self.slice = Slice(0, 4, 2)\n        self.integer = Integer(1)\n        self.tuple = Tuple(self.slice, ..., 0)\n        self.ellipsis = ellipsis()\n        self.newaxis = Newaxis()\n        self.integer_array = IntegerArray([[1, 2], [-1, 2]])\n        self.boolean_array = BooleanArray([[True, False], [False, False]])", "min_run_count": 2, "name": "ndindex.NDIndexTypes.time_ndindex_Newaxis", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "af87240b576ea2159bf2a0d4fca6da10bc27f6644f406d2bd61df1f36dad7692", "warmup_time": -1}, "ndindex.NDIndexTypes.time_ndindex_Slice": {"code": "class NDIndexTypes:\n    def time_ndindex_Slice(self):\n        ndindex(self.slice)\n\n    def setup(self):\n        from ndindex import (Slice, Tuple, Integer, ellipsis, Newaxis,\n                             IntegerArray, BooleanArray)\n        self.slice = Slice(0, 4, 2)\n        self.integer = Integer(1)\n        self.tuple = Tuple(self.slice, ..., 0)\n        self.ellipsis = ellipsis()\n        self.newaxis = Newaxis()\n        self.integer_array = IntegerArray([[1, 2], [-1, 2]])\n        self.boolean_array = BooleanArray([[True, False], [False, False]])", "min_run_count": 2, "name": "ndindex.NDIndexTypes.time_ndindex_Slice", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "3f5960e6396a7fc5773408761584a0746cf69cf71baab0f4efb3cf142daf5c8f", "warmup_time": -1}, "ndindex.NDIndexTypes.time_ndindex_Tuple": {"code": "class NDIndexTypes:\n    def time_ndindex_Tuple(self):\n        ndindex(self.tuple)\n\n    def setup(self):\n        from ndindex import (Slice, Tuple, Integer, ellipsis, Newaxis,\n                             IntegerArray, BooleanArray)\n        self.slice = Slice(0, 4, 2)\n        self.integer = Integer(1)\n        self.tuple = Tuple(self.slice, ..., 0)\n        self.ellipsis = ellipsis()\n        self.newaxis = Newaxis()\n        self.integer_array = IntegerArray([[1, 2], [-1, 2]])\n        self.boolean_array = BooleanArray([[True, False], [False, False]])", "min_run_count": 2, "name": "ndindex.NDIndexTypes.time_ndindex_Tuple", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "4203d73d29c0395b1747d25c7d6f213e97b1a15d85ea5818ee8bce16edb60285", "warmup_time": -1}, "ndindex.NDIndexTypes.time_ndindex_ellipsis": {"code": "class NDIndexTypes:\n    def time_ndindex_ellipsis(self):\n        ndindex(self.ellipsis)\n\n    def setup(self):\n        from ndindex import (Slice, Tuple, Integer, ellipsis, Newaxis,\n                             IntegerArray, BooleanArray)\n        self.slice = Slice(0, 4, 2)\n        self.integer = Integer(1)\n        self.tuple = Tuple(self.slice, ..., 0)\n        self.ellipsis = ellipsis()\n        self.newaxis = Newaxis()\n        self.integer_array = IntegerArray([[1, 2], [-1, 2]])\n        self.boolean_array = BooleanArray([[True, False], [False, False]])", "min_run_count": 2, "name": "ndindex.NDIndexTypes.time_ndindex_ellipsis", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "0efce75991b351b8f7427318cff0abfbe94fc310e0904630b04d42b42d13c452", "warmup_time": -1}, "newaxis.TimeNewaxis.time_constructor_int": {"code": "class TimeNewaxis:\n    def time_constructor_int(self):\n        Newaxis()\n\n    def setup(self):\n        self.n = Newaxis()", "min_run_count": 2, "name": "newaxis.TimeNewaxis.time_constructor_int", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1f0dd2c9c6ee3763dd25a82d561133386023e76c5bfe3623c40960c222a13ae9", "warmup_time": -1}, "newaxis.TimeNewaxis.time_isempty": {"code": "class TimeNewaxis:\n    def time_isempty(self):\n        self.n.isempty()\n\n    def setup(self):\n        self.n = Newaxis()", "min_run_count": 2, "name": "newaxis.TimeNewaxis.time_isempty", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "66e4b85805c721c9b44d103e2a87fee47c3075dc68865bab03a6fcb35cc4bc26", "warmup_time": -1}, "newaxis.TimeNewaxis.time_isempty_shape": {"code": "class TimeNewaxis:\n    def time_isempty_shape(self):\n        self.n.isempty((10, 5))\n\n    def setup(self):\n        self.n = Newaxis()", "min_run_count": 2, "name": "newaxis.TimeNewaxis.time_isempty_shape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "252acfd3082e6601b4b4f8c47335530077b13b241e0b099cd69d79742fa55f82", "warmup_time": -1}, "newaxis.TimeNewaxis.time_newshape": {"code": "class TimeNewaxis:\n    def time_newshape(self):\n        self.n.newshape((10, 5))\n\n    def setup(self):\n        self.n = Newaxis()", "min_run_count": 2, "name": "newaxis.TimeNewaxis.time_newshape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "cab9eaf7bd169a9d2f0d546eda5cb43ef0ac62dc5902be772ff0f4899f475161", "warmup_time": -1}, "newaxis.TimeNewaxis.time_reduce": {"code": "class TimeNewaxis:\n    def time_reduce(self):\n        self.n.reduce()\n\n    def setup(self):\n        self.n = Newaxis()", "min_run_count": 2, "name": "newaxis.TimeNewaxis.time_reduce", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "6c3b54b6a9e6c307b4ad157a153e96825a1572d47954531f608c185b8b66b701", "warmup_time": -1}, "newaxis.TimeNewaxis.time_reduce_shape": {"code": "class TimeNewaxis:\n    def time_reduce_shape(self):\n        self.n.reduce(10)\n\n    def setup(self):\n        self.n = Newaxis()", "min_run_count": 2, "name": "newaxis.TimeNewaxis.time_reduce_shape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "302633553a97d3c824ab3662d1456535e070fd3692a5bab1262a156ce6d27cda", "warmup_time": -1}, "slice.TimeSlice.time_constructor_ints": {"code": "class TimeSlice:\n    def time_constructor_ints(self):\n        Slice(0, 1, 10)\n\n    def setup(self):\n        self.s1 = Slice(0, 30)\n        self.s2 = Slice(0, 1, 10)", "min_run_count": 2, "name": "slice.TimeSlice.time_constructor_ints", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "82807e9dd6d4739f6ca4ecbae04f1c52aa4625429bdc4ffe2aa6e638d103678f", "warmup_time": -1}, "slice.TimeSlice.time_constructor_invalid": {"code": "class TimeSlice:\n    def time_constructor_invalid(self):\n        try:\n            Slice(0.5)\n        except TypeError:\n            pass\n\n    def setup(self):\n        self.s1 = Slice(0, 30)\n        self.s2 = Slice(0, 1, 10)", "min_run_count": 2, "name": "slice.TimeSlice.time_constructor_invalid", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "95dcc170402d51aaf770ec26cade0519bcaa4cadb8710228bdabf92f75875d88", "warmup_time": -1}, "slice.TimeSlice.time_constructor_slice": {"code": "class TimeSlice:\n    def time_constructor_slice(self):\n        Slice(slice(0, 30))\n\n    def setup(self):\n        self.s1 = Slice(0, 30)\n        self.s2 = Slice(0, 1, 10)", "min_run_count": 2, "name": "slice.TimeSlice.time_constructor_slice", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "57f7676f71c161f72db3742608b258273c98acd58796a735a1f855da8574e455", "warmup_time": -1}, "slice.TimeSlice.time_isempty": {"code": "class TimeSlice:\n    def time_isempty(self):\n        self.s1.isempty()\n\n    def setup(self):\n        self.s1 = Slice(0, 30)\n        self.s2 = Slice(0, 1, 10)", "min_run_count": 2, "name": "slice.TimeSlice.time_isempty", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "f43b10fbf8055ad0b1fd1f1416212b3f5cc89b2e4809d670a90bb59d062fd890", "warmup_time": -1}, "slice.TimeSlice.time_isempty_shape": {"code": "class TimeSlice:\n    def time_isempty_shape(self):\n        self.s1.isempty((10, 5))\n\n    def setup(self):\n        self.s1 = Slice(0, 30)\n        self.s2 = Slice(0, 1, 10)", "min_run_count": 2, "name": "slice.TimeSlice.time_isempty_shape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "35b16915ce7567887fe03dcbeaadcab5d36f7fdcef4d61a7277f83a10b608a74", "warmup_time": -1}, "slice.TimeSlice.time_len": {"code": "class TimeSlice:\n    def time_len(self):\n        len(self.s1)\n        len(self.s2)\n\n    def setup(self):\n        self.s1 = Slice(0, 30)\n        self.s2 = Slice(0, 1, 10)", "min_run_count": 2, "name": "slice.TimeSlice.time_len", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "f5f472b60885eeb45ae01930482a6123a6a5a83ac9635f993e9d3032e6ad6f4d", "warmup_time": -1}, "slice.TimeSlice.time_newshape": {"code": "class TimeSlice:\n    def time_newshape(self):\n        self.s1.newshape((10, 5))\n        self.s2.newshape((10, 5))\n\n    def setup(self):\n        self.s1 = Slice(0, 30)\n        self.s2 = Slice(0, 1, 10)", "min_run_count": 2, "name": "slice.TimeSlice.time_newshape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "69a4a196635398089f2d20513b6e1d98c2a0fad465722f84ba438d7763e06046", "warmup_time": -1}, "slice.TimeSlice.time_reduce": {"code": "class TimeSlice:\n    def time_reduce(self):\n        self.s1.reduce()\n        self.s2.reduce()\n\n    def setup(self):\n        self.s1 = Slice(0, 30)\n        self.s2 = Slice(0, 1, 10)", "min_run_count": 2, "name": "slice.TimeSlice.time_reduce", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "cb40382c493b01ca6f8fefe5466b9d583dffc6ae8e57748a1c00a9fbb3075f69", "warmup_time": -1}, "slice.TimeSlice.time_reduce_shape": {"code": "class TimeSlice:\n    def time_reduce_shape(self):\n        self.s1.reduce(10)\n        self.s2.reduce(10)\n\n    def setup(self):\n        self.s1 = Slice(0, 30)\n        self.s2 = Slice(0, 1, 10)", "min_run_count": 2, "name": "slice.TimeSlice.time_reduce_shape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1cac6b7091a37f64d490e1a3eb368c31fa94aeed5486350b54fab3bffb1a9a62", "warmup_time": -1}, "tuple.TimeTuple.time_broadcast_arrays": {"code": "class TimeTuple:\n    def time_broadcast_arrays(self):\n        self.t_arrays.broadcast_arrays()\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_broadcast_arrays", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "0c0e3051fc7849c7646e693458b4178238d677bcbf70f3c81d05c7846574b1fe", "warmup_time": -1}, "tuple.TimeTuple.time_broadcast_arrays_no_arrays": {"code": "class TimeTuple:\n    def time_broadcast_arrays_no_arrays(self):\n        self.t.broadcast_arrays()\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_broadcast_arrays_no_arrays", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "490c00e3a85d795c5586e691a6222ae29d61054baf9fc9b786eba003fe2383c6", "warmup_time": -1}, "tuple.TimeTuple.time_constructor_arrays": {"code": "class TimeTuple:\n    def time_constructor_arrays(self):\n        Tuple([[0, 1], [1, 2]], 2, [0, 1])\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_constructor_arrays", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "f87675c6073330ac3c29b3ac4a4975057bebaaea3406a236e035ef702b290952", "warmup_time": -1}, "tuple.TimeTuple.time_constructor_boolean_scalars": {"code": "class TimeTuple:\n    def time_constructor_boolean_scalars(self):\n        Tuple(True, 0, False)\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_constructor_boolean_scalars", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "dafcf48efcbe9828a501b607011303861841caf1f77627084ab14bc43d98bd83", "warmup_time": -1}, "tuple.TimeTuple.time_constructor_builtin": {"code": "class TimeTuple:\n    def time_constructor_builtin(self):\n        Tuple(slice(0, 10), ..., 1)\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_constructor_builtin", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "fc67ea2a09ee7f9843b05c3494c7e3d74f723c33c5cbc7c34cc7c5988898b161", "warmup_time": -1}, "tuple.TimeTuple.time_constructor_invalid_array_broadcast": {"code": "class TimeTuple:\n    def time_constructor_invalid_array_broadcast(self):\n        try:\n            Tuple([0, 1], [0, 1, 2])\n        except IndexError:\n            pass\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_constructor_invalid_array_broadcast", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "fde03dde44d931af4e3011839daaf88fa51817c3b71c8118c96dfe8a52c86348", "warmup_time": -1}, "tuple.TimeTuple.time_constructor_invalid_ellipses": {"code": "class TimeTuple:\n    def time_constructor_invalid_ellipses(self):\n        try:\n            Tuple(0, ..., ...)\n        except IndexError:\n            pass\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_constructor_invalid_ellipses", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "a9f9182788c1230eccc8721c4da752f567df330ca34efa579792f940b7dc4d15", "warmup_time": -1}, "tuple.TimeTuple.time_constructor_ndindex": {"code": "class TimeTuple:\n    def time_constructor_ndindex(self):\n        Tuple(*self.t.args)\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_constructor_ndindex", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "53fb8dcd6fdcdc8bce5518351f4051da13bb60f0506bb7da6da80353a955ed28", "warmup_time": -1}, "tuple.TimeTuple.time_expand": {"code": "class TimeTuple:\n    def time_expand(self):\n        self.t.expand((10, 4, 2))\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_expand", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "1d4cae726f0efd5ba34356187d2de299d9e901c2cd0dd582609b43fb4fb92bd4", "warmup_time": -1}, "tuple.TimeTuple.time_expand_arrays": {"code": "class TimeTuple:\n    def time_expand_arrays(self):\n        self.t_arrays.expand((10, 4, 2))\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_expand_arrays", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "547c5e2bba78c0dd73c78a85f8d9380b62d57f476b939ee02ee12f4cacbf96a4", "warmup_time": -1}, "tuple.TimeTuple.time_expand_boolean_scalars": {"code": "class TimeTuple:\n    def time_expand_boolean_scalars(self):\n        self.t_boolean_scalars.expand((10, 4, 2))\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_expand_boolean_scalars", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "21d7c4500a6b4add8213c7061c004a1c18a7c655724309244b1f3109c96bce61", "warmup_time": -1}, "tuple.TimeTuple.time_isempty": {"code": "class TimeTuple:\n    def time_isempty(self):\n        self.t.isempty()\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_isempty", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "46ac15705da6c3933843261747d894f6de0971dcc6a49450c171485d9660deb3", "warmup_time": -1}, "tuple.TimeTuple.time_isempty_shape": {"code": "class TimeTuple:\n    def time_isempty_shape(self):\n        self.t.isempty((10, 4, 2))\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_isempty_shape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "9ea2dfb70d03120744cc1c67edba6826e46b1399a5ca2f7533f64383a4f42e1e", "warmup_time": -1}, "tuple.TimeTuple.time_newshape": {"code": "class TimeTuple:\n    def time_newshape(self):\n        self.t.newshape((10, 4, 2))\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_newshape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "c7ac252e1d0f06df799949b0ae39f2d31b80a8578fb29f0152cd42ea47ad3d67", "warmup_time": -1}, "tuple.TimeTuple.time_reduce": {"code": "class TimeTuple:\n    def time_reduce(self):\n        self.t.reduce()\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_reduce", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "26778637394bb7384312befeacd4451262483e32bc72a6d6e587dc723cc4f129", "warmup_time": -1}, "tuple.TimeTuple.time_reduce_boolean_scalars": {"code": "class TimeTuple:\n    def time_reduce_boolean_scalars(self):\n        self.t_boolean_scalars.reduce()\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_reduce_boolean_scalars", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "80021bf01aea614f68513dd1167855d359d42b0466ec8b8cf651c39e5e8e2114", "warmup_time": -1}, "tuple.TimeTuple.time_reduce_shape": {"code": "class TimeTuple:\n    def time_reduce_shape(self):\n        self.t.reduce((10, 4, 2))\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_reduce_shape", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "f821e76d8e01b615a5fac9c9e962990805dfe62feaa981c2e827cf58d9acac67", "warmup_time": -1}, "tuple.TimeTuple.time_reduce_shape_error": {"code": "class TimeTuple:\n    def time_reduce_shape_error(self):\n        try:\n            self.t.reduce(10)\n        except IndexError:\n            pass\n\n    def setup(self):\n        self.t = Tuple(slice(0, 10), ..., 1)\n        self.t_arrays = Tuple([[0, 1], [1, 2]], 2, [0, 1])\n        self.t_boolean_scalars = Tuple(True, 0, False)", "min_run_count": 2, "name": "tuple.TimeTuple.time_reduce_shape_error", "number": 0, "param_names": [], "params": [], "processes": 2, "repeat": 0, "sample_time": 0.01, "timeout": 60.0, "type": "time", "unit": "seconds", "version": "8903d8cfab287b02bcad441c9b5f2628a9f02d7824f9df729d3a5ece586ddbf7", "warmup_time": -1}}, "machines": {"Aarons-Retina-MacBook-Pro.local": {"arch": "x86_64", "cpu": "Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz", "machine": "Aarons-Retina-MacBook-Pro.local", "os": "Darwin 18.6.0", "ram": "17179869184", "version": 1}}, "tags": {"1.0": 105, "1.1": 117, "1.2": 178, "1.3": 407, "1.3.1": 468, "1.4": 733, "1.5": 849, "1.5.1": 884}, "pages": [["", "Grid view", "Display as a agrid"], ["summarylist", "List view", "Display as a list"], ["regressions", "Show regressions", "Display information about recent regressions"]]}